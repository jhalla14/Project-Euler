import java.util.ArrayList;
import java.util.List;

/**
 * Created with IntelliJ IDEA.
 * User: Joshua Hall
 * Date: 1/22/14
 * Time: 7:17 PM
 *
 *
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be
 * 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

 Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
 10: 1,2,5,10
 15: 1,3,5,15
 21: 1,3,7,21
 28: 1,2,4,7,14,28
 We can see that 28 is the first triangle number to have over five divisors.

 What is the value of the first triangle number to have over five hundred divisors?
 */
public class Problem12 {

    public static Double solve(){

        int divisors = 0;
        int sum = 0;
        List<Integer> divisorsList = new ArrayList<Integer>();

        for (int counter=1; counter<=Integer.MAX_VALUE;counter++){
            sum += counter;

            divisors = factor(sum);
            System.out.println(divisors);
            divisorsList.add(sum);
            if (divisors > 500){
                break;
            }
        }


        System.out.println(divisors);
        System.out.println(divisorsList);

        return 0.0;
    }

    private static Integer generateTriangleNumbers(int limit){
        int triangleNumber;
        triangleNumber = (limit * (limit+1)) /2;
        return triangleNumber;
    }

    private static Integer factor(int number){
        if (number == 1) return 1;

        int counter = 0;
        for (int i=number;i>1;i--){
            if (number % i == 0){
                counter++;
            }
        }

        return counter;
    }
}
